>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[2, 4], [6, 8]], 2)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[10, 20, 30], [40, 50, 60]], 10)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided([[1, 2], [3, 4]], 1)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 30, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 22, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size

>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 16, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
